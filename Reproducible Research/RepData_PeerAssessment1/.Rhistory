y = expression('Total PM'[2.5]*" Emission"))
print(p)
dev.off()
coalEmmissions_USA <- aggregate(coal[c("Emissions")], list(year = coal$year), sum)
png(filename = "plot4.png",
width = 480, height = 480,
units = "px")
p<-ggplot(coalEmmissions_USA, aes(year, Emissions)) +
geom_point() +
geom_smooth(alpha=.2, size=1) +
labs(title = "Total Emissions from Coal Combustion-Related Sources",
x = "Year",
y = expression('Total PM'[2.5]*" Emission"))
print(p)
dev.off()
p
#  Subseting from datasets
## Sources in Baltimore City and L.A.
LABCsubset <- NEI[NEI$fips == "24510"|NEI$fips == "06037", ]
## Source classification codes from motor vehicle sources.
## Criteria: A motor vehicle or road vehicle is a self-propelled
##             wheeled vehicle that does not operate on rails,
##             such as trains or trolleys.
##           According to EPA:
##     http://www.epa.gov/ttn/chief/net/2008neiv3/2008_neiv3_tsd_draft.pdf
##for the sectors describing "on-road mobile sources":
##"The four sectors for on road mobile sources include emissions from motorized
##vehicles that are normally operated on public roadways.This includes passenger
##cars, motorcycles, minivans, sport-utility vehicles, light-duty trucks,
##heavy-duty trucks, and buses.
## All EI.Sector "vehicle" are "On-Road" type, so:
motor <- grep("vehicle", SCC$EI.Sector, ignore.case = T)
motor <- SCC[motor, ]
## Let's join both datasets
LABCmotor <- LABCsubset[LABCsubset$SCC %in% motor$SCC, ]
#  Labeling the data set with descriptive variable names.
names(LABCmotor)[1] <- c("City")
# Using descriptive city names to name the cities in the data set
cities<-c("Los Angeles County","Baltimore City")
LABCmotor$City = factor( LABCmotor$City,labels = cities)
# Calculating emissions from motor vehicle sources in Baltimore City
# and emissions from motor vehicle sources in Los Angeles County
LABCmotor<-LABCmotor[,c(1,4,6)]
TotalLABCmotorEmissions <- ddply(LABCmotor, .(City, year), numcolwise(sum))
##  With aggregate() func:
##    TotalLABCmotorEmissions <- aggregate(LABCmotor[c("Emissions")],
##    list(City = LABCmotor$City,
##    year = LABCmotor$year),
##    sum)
# Plotting
png('plot6.png',
width=480,
height=480,
bg = "transparent")
p <- ggplot(TotalLABCmotorEmissions, aes(x=year, y=Emissions, colour=City)) +
geom_point() +
geom_smooth(alpha=.2, size=1, method="loess") +
labs(size= "Nitrogen",
x = "Year",
y = expression('Total PM'[2.5]*" Emission"),
title = "Motor vehicle Emissions\n Baltimore-Los Angeles")
print(p)
dev.off()
View(TotalLABCmotorEmissions)
View(coalEmmissions_USA)
Baltimore_NEI <- subset(NEI, fips == "24510")
BT_totaEmTypeYear <- ddply(Baltimore_NEI, .(type, year), numcolwise(sum))
#BC <- subset(NEI, fips == "24510")
#pd <- aggregate(BC[c("Emissions")], list(type = BC$type, year = BC$year), sum)
#balt <- ddply(NEI[NEI$fips == "24510", ],
#                             .(type,year), summarise,
#                            TotalEmissions = sum(Emissions))
png('plot3.png', width=480, height=480)
p <- ggplot(BT_totaEmTypeYear, aes(x=year, y=Emissions, colour=type)) +
geom_point() +
geom_smooth( method="loess") +
labs(title = "Total Emissions by Type in Baltimore",
x = "Year",
y = expression('Total PM'[2.5]*" Emissions") )
print(p)
dev.off()
png('plot3.png', width=480, height=480)
p <- ggplot(BT_totaEmTypeYear, aes(x=year, y=Emissions, colour=type)) +
geom_point() +
geom_smooth( method="loess") +
labs(title = "Total Emissions by Type in Baltimore",
x = "Year",
y = expression('Total PM'[2.5]*" Emissions"),
colour="City")
print(p)
dev.off()
library(plyr)
#  Reading Data
NEI <- readRDS("exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("exdata-data-NEI_data/Source_Classification_Code.rds")
Baltimore_NEI <- subset(NEI, fips == "24510")
totalEmissions2 <-tapply(Baltimore_NEI$Emissions, Baltimore_NEI$year, FUN=sum)
png(filename = "./figure/plot2.png",
width = 480, height = 480,
units = "px",
bg = "transparent")
plot(totalEmissions2,
type = "l",
xlab = "Year",
main = "Total Emissions in the Baltimore city from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
png(filename = "plot2.png",
width = 480, height = 480,
units = "px",
bg = "transparent")
plot(totalEmissions2,
type = "l",
xlab = "Year",
main = "Total Emissions in the Baltimore city from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
totalEmissions2 <-tapply(NEI$Emissions, NEI$year, FUN=sum)
totalEmissions2<-as.data.frame(as.table(totalEmissions2))
png(filename = "plot1.png",
width = 480, height = 480,
units = "px",
bg = "transparent")
plot(totalEmissions, type = "l", xlab = "Year",
main = "Total Emissions in the United States from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
totalEmissions <-tapply(NEI$Emissions, NEI$year, FUN=sum)
totalEmissions <-as.data.frame(as.table(totalEmissions2))
png(filename = "plot1.png",
width = 480, height = 480,
units = "px",
bg = "transparent")
plot(totalEmissions, type = "l", xlab = "Year",
main = "Total Emissions in the United States from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
totalEmissions <-tapply(NEI$Emissions, NEI$year, FUN=sum)
totalEmissions <-as.data.frame(as.table(totalEmissions))
png(filename = "plot1.png",
width = 480, height = 480,
units = "px",
bg = "transparent")
plot(totalEmissions, type = "l", xlab = "Year",
main = "Total Emissions in the United States from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
plot(totalEmissions,
type = "l",
xlab = "Year",
ylab = expression('Total PM'[2.5]*" Emission"),
main = "Total Emissions in the United States from 1999 to 2008" )
plot(totalEmissions,
type = "l",
xlab = "Year",
ylab = expression('Total PM'[2.5]*" Emission"),
main = "Total Emissions in the United States from 1999 to 2008" )
plot(totalEmissions$year, totalEmissions$Emissions, type = "l",
main = "Total Emissions from PM2.5 in the US",
xlab = "Year", ylab = "Emissions")
View(totalEmissions)
View(totalEmissions2)
View(totalEmissions)
totalEmissions <-tapply(NEI$Emissions, NEI$year, FUN=sum)
#totalEmissions <-as.data.frame(as.table(totalEmissions))
png(filename = "plot1.png",
width = 480, height = 480,
units = "px",
bg = "transparent")
plot(totalEmissions,
type = "l",
xlab = "Year",
ylab = expression('Total PM'[2.5]*" Emission"),
main = "Total Emissions in the United States from 1999 to 2008" )
totalEmissions <- ddply(NEI, .(Emissions, year), numcolwise(sum))
totalEmissions <- aggregate(NEI$Emissions, list(NEI$year), sum)
png(filename = "plot1.png",
width = 480, height = 480,
units = "px",
bg = "transparent")
plot(totalEmissions,
type = "l",
xlab = "Year",
ylab = expression('Total PM'[2.5]*" Emission"),
main = "Total Emissions in the United States from 1999 to 2008" )
dev.off()
#  Subseting from datasets
## Sources in Baltimore City and L.A.
LABCsubset <- NEI[NEI$fips == "24510"|NEI$fips == "06037", ]
## Source classification codes from motor vehicle sources.
## Criteria: A motor vehicle or road vehicle is a self-propelled
##             wheeled vehicle that does not operate on rails,
##             such as trains or trolleys.
##           According to EPA:
##     http://www.epa.gov/ttn/chief/net/2008neiv3/2008_neiv3_tsd_draft.pdf
##for the sectors describing "on-road mobile sources":
##"The four sectors for on road mobile sources include emissions from motorized
##vehicles that are normally operated on public roadways.This includes passenger
##cars, motorcycles, minivans, sport-utility vehicles, light-duty trucks,
##heavy-duty trucks, and buses.
## All EI.Sector "vehicle" are "On-Road" type, so:
motor <- grep("vehicle", SCC$EI.Sector, ignore.case = T)
motor <- SCC[motor, ]
## Let's join both datasets
LABCmotor <- LABCsubset[LABCsubset$SCC %in% motor$SCC, ]
#  Labeling the data set with descriptive variable names.
names(LABCmotor)[1] <- c("City")
# Using descriptive city names to name the cities in the data set
cities<-c("Los Angeles County","Baltimore City")
LABCmotor$City = factor( LABCmotor$City,labels = cities)
# Calculating emissions from motor vehicle sources in Baltimore City
# and emissions from motor vehicle sources in Los Angeles County
LABCmotor<-LABCmotor[,c(1,4,6)]
TotalLABCmotorEmissions <- ddply(LABCmotor, .(City, year), numcolwise(sum))
##  With aggregate() func:
##    TotalLABCmotorEmissions <- aggregate(LABCmotor[c("Emissions")],
##    list(City = LABCmotor$City,
##    year = LABCmotor$year),
##    sum)
# Plotting
png('plot6.png',
width=480,
height=480,
bg = "transparent")
p <- ggplot(TotalLABCmotorEmissions, aes(x=year, y=Emissions, colour=City)) +
geom_point() +
geom_smooth(alpha=.2, size=1, method="loess") +
labs(size= "Nitrogen",
x = "Year",
y = expression('Total PM'[2.5]*" Tons"),
title = "Motor vehicle Emissions\n Baltimore-Los Angeles")
print(p)
dev.off()
NEI_Bcity <- NEI[NEI$fips == "24510", ]
## Criteria: A motor vehicle or road vehicle is a self-propelled
##             wheeled vehicle that does not operate on rails,
##             such as trains or trolleys.
##           According to EPA:
##     http://www.epa.gov/ttn/chief/net/2008neiv3/2008_neiv3_tsd_draft.pdf
##For the sectors describing "on-road mobile sources":
##"The four sectors for on road mobile sources include emissions from motorized
##vehicles that are normally operated on public roadways.This includes passenger
##cars, motorcycles, minivans, sport-utility vehicles, light-duty trucks,
##heavy-duty trucks, and buses.
### Retrieving SCC data according to criteria
OnRoad<- grep("On-Road", SCC$EI.Sector, ignore.case = T)
SCC_onRoad<- SCC[OnRoad, ]
VEH <-grep("vehicle",SCC_onRoad$EI.Sector,ignore.case=T)
SCC_onRoadVeh <- SCC_onRoad[VEH, ]
### Joint NEI Baltimore City and SCC motor vehicle
NEI_BcityMotorVeh <- subset(NEI_Bcity, NEI_Bcity$SCC %in%  SCC_onRoadVeh$SCC)
# Claculating emissions from motor vehicle sources
# changed from 1999â€“2008 in Baltimore City
BC_EmiY <- aggregate(NEI_BcityMotorVeh[c("Emissions")],
list(year = NEI_BcityMotorVeh$year),
sum)
# Plotting
png('plot5.png',
width=480,
height=480,
bg = "transparent")
p <- ggplot(BC_EmiY, aes(x=year, y=Emissions))+
geom_point() +
geom_smooth(method="loess") +
labs(size= "Nitrogen",
x = "Year",
y = expression('Total PM'[2.5]*" Tons"),
title = "Total Emissions From Motor Vehicle Sources\nin Baltimore City")
print(p)
dev.off()
coal <- grep("coal", SCC$Short.Name, ignore.case = T)
coal <- SCC[coal, ]
coal <- NEI[NEI$SCC %in% coal$SCC, ]
# Claculating emissions from coal combustion-related sources from 1999â€“2008.
coalEmmissions_USA<-ddply(coal, .(year), numcolwise(sum))
## With aggregate() func:
##coalEmmissions_USA <- aggregate(coal[c("Emissions")], list(year = coal$year), sum)
# Plotting.
png(filename = "plot4.png",
width = 480, height = 480,
units = "px")
p<-ggplot(coalEmmissions_USA, aes(year, Emissions)) +
geom_point() +
geom_smooth(alpha=.2, size=1) +
labs(title = "Total Emissions from Coal Combustion-Related Sources",
x = "Year",
y = expression('Total PM'[2.5]*" Tons"))
print(p)
dev.off()
Baltimore_NEI <- subset(NEI, fips == "24510")
# Calculating emissions from 1999â€“2008 for Baltimore City by the type.
BT_totaEmTypeYear <- ddply(Baltimore_NEI, .(type, year), numcolwise(sum))
# Plotting
png('plot3.png',
width=480,
height=480)
p <- ggplot(BT_totaEmTypeYear, aes(x=year, y=Emissions, colour=type)) +
geom_point() +
geom_smooth( method="loess") +
labs(title = "Total Emissions by Type in Baltimore",
x = "Year",
y = expression('Total PM'[2.5]*" Tons"),
colour="City")
print(p)
dev.off()
Baltimore_NEI <- subset(NEI, fips == "24510")
# Calculating emissions from 1999â€“2008 for Baltimore City
totalEmissions2 <-tapply(Baltimore_NEI$Emissions, Baltimore_NEI$year, FUN=sum)
# Plotting.
png(filename = "plot2.png",
width = 480, height = 480,
units = "px",
bg = "transparent")
plot(totalEmissions2,
type = "l",
xlab = "Year",
main = "Total Emissions in the Baltimore city from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Tons"))
dev.off()
#  Subseting from datasets
## Sources in USA.
totalEmissions <- aggregate(NEI$Emissions, list(NEI$year), sum)
png(filename = "plot1.png",
width = 480, height = 480,
units = "px",
bg = "transparent")
plot(totalEmissions,
type = "l",
xlab = "Year",
ylab = expression('Total PM'[2.5]*" Tons"),
main = "Total Emissions in the United States from 1999 to 2008" )
dev.off()
library(ggplot2)
library(plyr)
#  Read Data
NEI <- readRDS("exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("exdata-data-NEI_data/Source_Classification_Code.rds")
#  Subseting from datasets
## Sources in Baltimore City and L.A.
LABCsubset <- NEI[NEI$fips == "24510"|NEI$fips == "06037", ]
## Source classification codes from motor vehicle sources.
## Criteria: A motor vehicle or road vehicle is a self-propelled
##             wheeled vehicle that does not operate on rails,
##             such as trains or trolleys.
##           According to EPA:
##     http://www.epa.gov/ttn/chief/net/2008neiv3/2008_neiv3_tsd_draft.pdf
##for the sectors describing "on-road mobile sources":
##"The four sectors for on road mobile sources include emissions from motorized
##vehicles that are normally operated on public roadways.This includes passenger
##cars, motorcycles, minivans, sport-utility vehicles, light-duty trucks,
##heavy-duty trucks, and buses.
## All EI.Sector "vehicle" are "On-Road" type, so:
motor <- grep("vehicle", SCC$EI.Sector, ignore.case = T)
motor <- SCC[motor, ]
## Let's join both datasets
LABCmotor <- LABCsubset[LABCsubset$SCC %in% motor$SCC, ]
#  Labeling the data set with descriptive variable names.
names(LABCmotor)[1] <- c("City")
# Using descriptive city names to name the cities in the data set
cities<-c("Los Angeles County","Baltimore City")
LABCmotor$City = factor( LABCmotor$City,labels = cities)
# Calculating emissions from motor vehicle sources in Baltimore City
# and emissions from motor vehicle sources in Los Angeles County
LABCmotor<-LABCmotor[,c(1,4,6)]
TotalLABCmotorEmissions <- ddply(LABCmotor, .(City, year), numcolwise(sum))
##  With aggregate() func:
##    TotalLABCmotorEmissions <- aggregate(LABCmotor[c("Emissions")],
##    list(City = LABCmotor$City,
##    year = LABCmotor$year),
##    sum)
# Plotting
png('plot6.png',
width=480,
height=480,
bg = "transparent")
p <- ggplot(TotalLABCmotorEmissions, aes(x=year, y=Emissions, colour=City)) +
geom_point() +
geom_smooth(alpha=.2, size=1, method="loess") +
facet_grid(City  ~ ., scales="free") +
labs(size= "Nitrogen",
x = "Year",
y = expression('Total PM'[2.5]*" Tons"),
title = "Motor vehicle Emissions\n Baltimore-Los Angeles")
print(p)
dev.off()
Baltimore_NEI <- subset(NEI, fips == "24510")
# Calculating emissions from 1999â€“2008 for Baltimore City by the type.
BT_totaEmTypeYear <- ddply(Baltimore_NEI, .(type, year), numcolwise(sum))
# Plotting
png('plot3.png',
width=480,
height=480)
p <- ggplot(BT_totaEmTypeYear, aes(x=year, y=Emissions, colour=type)) +
geom_point() +
geom_smooth( method="loess") +
facet_wrap(~ type, scales = "free")+
labs(title = "Total Emissions by Type in Baltimore",
x = "Year",
y = expression('Total PM'[2.5]*" Tons"),
colour="City")
print(p)
dev.off()
png('plot3.png',
width=480,
height=480)
p <- ggplot(BT_totaEmTypeYear, aes(x=year, y=Emissions, colour=type)) +
geom_point() +
geom_smooth( method="loess") +
facet_grid(type  ~ ., scales="free")+
labs(title = "Total Emissions by Type in Baltimore",
x = "Year",
y = expression('Total PM'[2.5]*" Tons"),
colour="Type")
print(p)
dev.off()
png('plot3.png',
width=480,
height=480)
p <- ggplot(BT_totaEmTypeYear, aes(x=year, y=Emissions, colour=type)) +
geom_point() +
geom_smooth( method="loess") +
#facet_grid(type  ~ ., scales="free")+
labs(title = "Total Emissions by Type in Baltimore",
x = "Year",
y = expression('Total PM'[2.5]*" Tons"),
colour="Type")
print(p)
dev.off()
install.packages("rmarkdown")
'''r
''
install.packages(c("DBI", "Formula", "Hmisc", "KernSmooth", "MASS", "Matrix", "RColorBrewer", "RCurl", "RH2", "RJDBC", "RMySQL", "RSQLite", "Rcpp", "RgoogleMaps", "betategarch", "boot", "cluster", "codetools", "data.table", "devtools", "digest", "foreign", "formatR", "gsubfn", "highr", "httpuv", "httr", "jsonlite", "knitr", "manipulate", "maps", "maptools", "markdown", "mgcv", "mime", "nlme", "reshape2", "rjson", "sp", "sqldf", "swirl", "testthat", "xlsx", "xlsxjars"))
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("knitr")
install.packages("knitr")
defaults write org.R-project.R force.LANG en_US.UTF-8
install.packages("knitr")
But when I run
system("locale")
install.packages("knitr")
install.packages("rmarkdown")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages(c("boot", "cluster", "codetools", "foreign", "manipulate", "MASS", "Matrix", "mgcv", "nlme"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/Repositorios/datasciencecoursera/Reproducible Research/RepData_PeerAssessment1")
source('~/.active-rstudio-document', echo=TRUE)
head(Totalsteps.date.noNA)
Totalsteps.date.noNA <- aggregate(steps ~ date, data = activity.noNA, FUN = sum)
rename(Totalsteps.date.noNA, c("date"="day", "steps"="totalsteps"))
head(Totalsteps.date.noNA)
names(Totalsteps.date.noNA, c("date"="day", "steps"="totalsteps"))
Totalsteps.date.noNA <- aggregate(steps ~ date, data = activity.noNA, FUN = sum)
names(Totalsteps.date.noNA)[2] <- "totalsteps"
head(Totalsteps.date.noNA)
ggplot(Steps.avg, aes(interval, meanOfSteps, color = factor(daytype)))+
geom_density(aes(group=ind, colour=ind, fill=ind),alpha=0.3)+
geom_point()+
geom_line()
ggplot(Steps.avg, aes(interval, meanOfSteps))+
geom_density(aes(group=ind, colour=ind, fill=ind),alpha=0.3)+
geom_point()+
geom_line()
ggplot(Steps.avg, aes(interval, meanOfSteps))+
geom_density(aes(group=daytype, colour=daytype, fill=daytype),alpha=0.3)+
geom_point()+
geom_line()
ggplot(Steps.avg, aes(interval, meanOfSteps)) +
geom_line(size = 0.8,
colour="#0072B2") +
labs(title = "Time Series Plot ",
x = "5-minute intervals",
y = "Average Number of Steps ")
ggplot(Steps.avg, aes(interval, meanOfSteps, color = factor(daytype)))+
geom_point()+
facet_grid(daytype ~ .) +
geom_line()
ggplot(Steps.avg, aes(interval, meanOfSteps, color = daytype))+
geom_point()+
facet_grid(daytype ~ .) +
geom_line()
p1<-ggplot(Steps.avg, aes(interval, meanOfSteps, color = daytype))+
geom_point()+
facet_grid(daytype ~ .) +
geom_line()
p2<-ggplot(Steps.avg, aes(interval, meanOfSteps, color = daytype))+
geom_point()+
geom_line()
p2<-ggplot(Steps.avg, aes(interval, meanOfSteps, color = daytype))+
geom_point()+
geom_line()
p2<-ggplot(Steps.avg, aes(interval, meanOfSteps, color = factor(daytype))+
geom_point()+
geom_line()
p2<-ggplot(Steps.avg, aes(interval, meanOfSteps, color = factor(daytype))+
geom_point()+
geom_line()
ggplot(Steps.avg, aes(interval, meanOfSteps, color = factor(daytype))+
geom_point()+
geom_line()
geom_line()
multiplot(p1,p2,cols=2)
ggplot(Steps.avg, aes(interval, meanOfSteps, color = daytype))+
geom_point()+
facet_grid(daytype ~ .) +
geom_line()
ggplot(Steps.avg, aes(interval, meanOfSteps, color = factor(daytype))+
geom_point()+
geom_line()
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
